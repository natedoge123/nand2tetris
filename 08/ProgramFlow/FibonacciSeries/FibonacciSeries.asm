@256
D=A
@SP
M=D
// 	push argument 1         
@2
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	pop pointer 1           
@SP
M=M-1
A=M
D=M
@R4
M=D
// 	push constant 0         
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// 	pop that 0              
@SP
M=M-1
A=M
D=M
@R13
M=D
@4
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// 	push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// 	pop that 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@4
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// 	push argument 0         
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	push constant 2         
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// 	sub                     
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	pop argument 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@2
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// 	label LOOP
(LOOP)
// 	push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	if-goto COMPUTE_ELEMENT 
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@COMPUTE_ELEMENT
D;JNE
// 	goto END                
@END
0;JMP
// 	label COMPUTE_ELEMENT
(COMPUTE_ELEMENT)
// 	push that 0
@4
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	push that 1
@4
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	pop that 2
@SP
M=M-1
A=M
D=M
@R13
M=D
@4
D=M
@2
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// 	push pointer 1
@R4
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// 	add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	pop pointer 1
@SP
M=M-1
A=M
D=M
@R4
M=D
// 	push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// 	sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// 	pop argument 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@2
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// 	goto LOOP
@LOOP
0;JMP
// 	label END
(END)
